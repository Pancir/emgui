use crate::core::ThemeExtensions;
use sim_draw::Canvas;

////////////////////////////////////////////////////////////////////////////////////////////////////

#[derive(Default)]
pub struct Theme {
   pub extensions: ThemeExtensions,
}

impl Theme {
   pub fn default_dark() -> Self {
      Self { extensions: Default::default() }
   }
}

////////////////////////////////////////////////////////////////////////////////////////////////////

pub struct FnCell<F>(F);

impl<F> FnCell<F> {
   pub const fn new(f: F) -> Self {
      Self(f)
   }

   pub fn get(&self) -> F {
      unimplemented!()
   }

   pub fn set(&self, _f: F) {
      unimplemented!()
   }
}

////////////////////////////////////////////////////////////////////////////////////////////////////

pub struct Common {
   pub is_focused: bool,
   pub is_hover: bool,
   pub is_down: bool,
}

pub struct Button {
   pub base: Common,
   pub toggle: u8,
}

////////////////////////////////////////////////////////////////////////////////////////////////////

fn button(b: &Button, c: &mut Canvas) {}

pub static BUTTON: FnCell<fn(&Button, &mut Canvas)> = FnCell::new(button);

////////////////////////////////////////////////////////////////////////////////////////////////////
