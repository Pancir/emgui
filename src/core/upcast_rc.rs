use std::rc::Rc;

////////////////////////////////////////////////////////////////////////////////////////////////////

pub trait UpcastFrom<T: ?Sized> {
   fn up_from_rc(value: Rc<T>) -> Rc<Self>;
}

pub trait Upcast<U: ?Sized> {
   fn upcast(self: Rc<Self>) -> Rc<U>;
}

////////////////////////////////////////////////////////////////////////////////////////////////////

impl<T: ?Sized, U: ?Sized> Upcast<U> for T
where
   U: UpcastFrom<T>,
{
   fn upcast(self: Rc<Self>) -> Rc<U> {
      U::up_from_rc(self)
   }
}

////////////////////////////////////////////////////////////////////////////////////////////////////
